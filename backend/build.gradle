plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.node-gradle.node' version '3.4.0' // Node.js Gradle 플러그인 추가
}

group = 'com.toyProject'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson-spring-boot-starter:3.17.0'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Node.js와 React 빌드 관련 설정
//node {
//	version = '16.15.0'  // Node.js 버전
//	npmVersion = '8.5.0' // npm 버전
//	download = true
//}
//
//task buildFrontend(type: NpmTask) {
//	dependsOn npmInstall
//	workingDir = file("${projectDir}/src/main/frontend") // React 프로젝트 폴더 경로
//	args = ['run', 'build'] // React 빌드 명령어
//}
//
//bootJar {
//	dependsOn buildFrontend // React 빌드 후 Spring Boot 애플리케이션 패키징
//	from("${projectDir}/src/main/frontend/build") {
//		into "static" // 빌드된 React 파일을 Spring Boot의 static 폴더로 복사
//	}
//}
tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = 'app.jar'
}
//def querydslDir = "$buildDir/generated/querydsl"
//
//sourceSets {
//	main {
//		java {
//			srcDir querydslDir
//		}
//	}
//}
//
//tasks.withType(JavaCompile).configureEach {
//	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
//}
